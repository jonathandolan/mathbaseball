package MathBaseball.math_bb2;


import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by Febo on 2/17/14.
 */
public class PlayBall {
    private JPanel panel1;
    private JTextArea textPane1;
    private JTextField textField1;
    private JButton SWINGButton;
    private JFormattedTextField formattedTextField1;
    private int firstNum;
    private int secondNum;
    private String answer;
    private String tempQuestion;
    private char questionType; //addition(a) subtraction(s) places(p)


    public PlayBall() {

        SWINGButton.addActionListener(new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if(textField1.getText() != null)
                answer = textField1.getText();
                MathBaseball.answerRecieved(Integer.parseInt(answer), questionType);
            }
        });
    }

    private String buildQuestion(int one, int two){
        SWINGButton.setText("SWING");
        String s;
        if(questionType == 'a'){
          s = ("What is the SUM of " + one + " and " + two +"? " + one + " + " + two + " = ");
        }
        else if(questionType == 's'){
          s = ("What is the DIFFERENCE of " + one + " and " + two +"? " + one + " - " + two + " = ");
        }
        else{
          s = ("What is in the " + placeFinder(two) + " place of " + one +"?");
        }
        tempQuestion = s;
        return s;
    }

    private String placeFinder(int x){
        String s;
        if(x == 1){
            s = "One's";
        }
        else if(x == 2){
            s = "Tenth's";
        }
        else{
            s = "Hundredth's";
        }
        return s;
    }

    public void displayAdditionQuestion(int one, int two){
        firstNum = one;
        secondNum = two;
        questionType = 'a';
        textPane1.setText("");
        textPane1.setText(buildQuestion(one, two));

    }

    public void displaySubtractionQuestion(int one, int two){
        firstNum = one;
        secondNum = two;
        questionType = 's';
        textPane1.setText("");
        textPane1.setText(buildQuestion(one, two));

    }

    public void displayPlacesQuestion(int one, int two){
        firstNum = one;
        secondNum = two;
        questionType = 'p';
        textPane1.setText("");
        textPane1.setText(buildQuestion(one, two));

    }

    public void displayCorrect(){
        textPane1.setText("");
        textPane1.setText("GOOD JOB! That was the correct answer.");
        SWINGButton.setText("Next Question");
    }

    public void displayWrongAdd(int c){
        textPane1.setText("");
        textPane1.setText("GOOD JOB! That was the correct answer.");
        SWINGButton.setText("Next Question");
    }

    public void displayWrongSub(int c){
        textPane1.setText("");
        textPane1.setText("GOOD JOB! That was the correct answer.");
        SWINGButton.setText("Next Question");
    }

    public void displayWrongPlaces(int c){
        textPane1.setText("");
        textPane1.setText("GOOD JOB! That was the correct answer.");
        SWINGButton.setText("Next Question");
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(4, 2, new Insets(0, 0, 0, 0), -1, -1));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        textPane1 = new JTextArea();
        textPane1.setFont(new Font("HGMinchoL", textPane1.getFont().getStyle(), textPane1.getFont().getSize()));
        textPane1.setText("");
        panel1.add(textPane1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Answer:");
        panel1.add(label1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField1 = new JTextField();
        panel1.add(textField1, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        SWINGButton = new JButton();
        SWINGButton.setText("SWING");
        panel1.add(SWINGButton, new GridConstraints(3, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        formattedTextField1 = new JFormattedTextField();
        panel1.add(formattedTextField1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
